/* Styles for ContentFrame */

@define ContentTransitionTime: 0.3s;

ContentFrame
{
	width: 100%;
	height: 100%;
	background-color: #031a3d;
	background-image: url( "file://{images}/panel_background.png" );
	transform: translateY( 100% );	

	transition-property: transform;
	transition-timing-function: bigpicture-ease-in-out;
	transition-duration: ContentTransitionTime;

	// remove this when main menu zindex has been altered
	z-index: 2001;
}

ContentFrame:descendantfocus
{
	transform: none;
}

#ContentFrameHeader
{
	width: 100%;
	height: 96px;
	padding: 5px 58px 0px 84px;
	flow-children: right;
//	background-color: #ff000020;

	color: white;
	font-size: 48px;
}

#ContentFrameHeader .SteamLogo
{
	vertical-align: center;
}

.ContentBreadcrumb
{
	vertical-align: center;
	margin: 0px 12px 0px 20px;
	color: #626a6e;
}

#ContentTitles
{
	width: fill-parent-flow( 1.0 );
	vertical-align: center;
}

.ContentTitle
{
	opacity: 0.0;

	transition-property: opacity;
	transition-duration: ContentTransitionTime;
	transition-timing-function: bigpicture-ease-in-out;
}

.ContentTitle.Show
{
	opacity: 1.0;
}

.ContentTitle.Hide
{
	opacity: 0.0;
}

#Clock
{
	font-size: 30px;
	vertical-align: center;
	flow-children: right;
}

#Clock #Time
{
	margin-right: 8px;	
}

// Remote Content
/////////////////

RemoteContent .LoadingPanel
{
	width: 100%;
	height: 100%;
}

RemoteContent .LoadingPanel #Loading
{
	width: 100%;
	height: 100%;
	opacity: 0.0;
}

RemoteContent.RemoteContentLoading .LoadingPanel #Loading
{
	opacity: 1.0;
}

RemoteContent .LoadingPanel #Loading #LoadingStatus
{
	align: center top;
	margin-top: 300px;
	width: 80%;
	text-align: center;

	color: detailsdatalabel;
	font-size: 32px;
}

RemoteContent .LoadingPanel LoadingThrobber
{
	horizontal-align: center;
	margin-top: 350px;

	opacity: 1.0;
	pre-transform-scale2d: 0.85;
}

RemoteContent .LoadingPanel #Offline,
RemoteContent .LoadingPanel #Error
{
	width: 100%;
	height: 100%;
	padding-bottom: 50px;
	opacity: 0.0;
	
	transition-property: opacity;
	transition-duration: 0.23s;
	transition-delay: 1.25s;	
}

RemoteContent.Offline .LoadingPanel #Offline,
RemoteContent.LoadError .LoadingPanel #Error
{
	opacity: 1.0;
}

RemoteContent .LoadingPanel #OfflineMessage,
RemoteContent .LoadingPanel #ErrorMessage
{
	flow-children: down;
	width: 100%;
	vertical-align: center;
}

RemoteContent .LoadingPanel #OfflineStatus1,
RemoteContent .LoadingPanel #OfflineStatus2,
RemoteContent .LoadingPanel #ErrorStatus1,
RemoteContent .LoadingPanel #ErrorStatus2
{
	color: tcstatictext;
	horizontal-align: center;

	max-width: 75%;
	margin-bottom: 20px;
	text-align: center;
}

RemoteContent .LoadingPanel #OfflineStatus1,
RemoteContent .LoadingPanel #ErrorStatus1
{
	font-size: largefontsize;
}

RemoteContent .LoadingPanel #OfflineStatus2,
RemoteContent .LoadingPanel #ErrorStatus2
{
	font-size: medfontsize;
	height: 200px;
}


// Content Panels
/////////////////

#ContentPanels
{
	width: 100%;
	height: 980px;
	vertical-align: bottom;
	overflow: clip;
}

.ContentPanel
{
	width: 100%;
	height: 100%;
	background-image: url( "file://{images}/panel_background.png" );
	background-position: 0px -110px;

	opacity: 1.0;
	transform: translateY( 100% );

	transition-property: transform, opacity;
	transition-timing-function: bigpicture-ease-in-out;
	transition-duration: ContentTransitionTime;
}

.ContentPanel.TopOfStack
{
	transform: none;
}

.ContentPanel.MiddleOfStack
{
	transform: translateY( -33% );
	opacity: 0;
}

.ContentPanel.ResetStackStateForwardNav
{
	// slam panel to default state skipping transition
	transform: translateY( 100% );
	transition-duration: 0s !immediate;
}

.ContentPanel.ResetStackStateBackwardNav
{
	// slam panel to default state skipping transition
	transform: translateY( -50% );
	transition-duration: 0s !immediate;
}